# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: replacetokens@3
      inputs:
        targetFiles: '**/*.json'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

        
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'DustStream'

- stage: Deploy
  dependsOn:
  - Build
  condition: succeeded('Build')
  jobs:
  - job: Deploy
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: 'DustStream'
          path: '$(System.DefaultWorkingDirectory)'

      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'DustStream (4607e418-5e6a-4c3d-8113-9f4fd115d17b)'
          appType: 'webApp'
          WebAppName: 'DustStream'
          packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

